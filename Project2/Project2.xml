<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Project2</name>
    </assembly>
    <members>
        <member name="T:Project2.Cheese">
            <summary>
            Cheeses available for a sandwich
            </summary>
        </member>
        <member name="F:Project2.Cheese.Provolone">
            <summary>
            Provolone Cheese
            </summary>
        </member>
        <member name="F:Project2.Cheese.Swiss">
            <summary>
            Swiss Cheese
            </summary>
        </member>
        <member name="F:Project2.Cheese.American">
            <summary>
            American Cheese
            </summary>
        </member>
        <member name="F:Project2.Cheese.Cheddar">
            <summary>
            Cheddar Cheese
            </summary>
        </member>
        <member name="F:Project2.Cheese.Muenster">
            <summary>
            Muenster Cheese
            </summary>
        </member>
        <member name="F:Project2.Cheese.None">
            <summary>
            No Cheese Selected
            </summary>
        </member>
        <member name="T:Project2.Dressing">
            <summary>
            Dressings available for a sandwich
            </summary>
        </member>
        <member name="F:Project2.Dressing.Italian">
            <summary>
            Italian dressing
            </summary>
        </member>
        <member name="F:Project2.Dressing.Honey_Mustard">
            <summary>
            Honey Mustard dressing
            </summary>
        </member>
        <member name="F:Project2.Dressing.Mayo">
            <summary>
            Mayonaise
            </summary>
        </member>
        <member name="F:Project2.Dressing.None">
            <summary>
            No dressing selected
            </summary>
        </member>
        <member name="T:Project2.Meat">
            <summary>
            Enum listing the meats availaable for a sandwich
            </summary>
        </member>
        <member name="F:Project2.Meat.Roast_Beef">
            <summary>
            Roast Beef
            </summary>
        </member>
        <member name="F:Project2.Meat.Turkey">
            <summary>
            Turkey
            </summary>
        </member>
        <member name="F:Project2.Meat.Tuna_Salad">
            <summary>
            Tuna salad
            </summary>
        </member>
        <member name="F:Project2.Meat.Chicken_Salad">
            <summary>
            Chicken Salad
            </summary>
        </member>
        <member name="F:Project2.Meat.Salami">
            <summary>
            Salami
            </summary>
        </member>
        <member name="T:Project2.Program">
            <summary>
            Main logic for the program.  Contains the entry point.
            </summary>
        </member>
        <member name="F:Project2.Program.sandwiches">
            <summary>
            List containing sandwich objects
            </summary>
        </member>
        <member name="F:Project2.Program.isDelivery">
            <summary>
            Flag indicating if this is a delivery order (true) or a pickup order (false)
            </summary>
        </member>
        <member name="F:Project2.Program.SAMELINE">
            <summary>
            Constant value (false) for use with WriteColor when you don't want a new line generated
            </summary>
        </member>
        <member name="F:Project2.Program.customerName">
            <summary>
            Holding variable for customer name
            </summary>
        </member>
        <member name="F:Project2.Program.size">
            <summary>
            Holding variable for sandwich size
            </summary>
        </member>
        <member name="F:Project2.Program.dressing">
            <summary>
            Holding variable for Dressing selection
            </summary>
        </member>
        <member name="F:Project2.Program.cheese">
            <summary>
            Holding variable for Cheese type
            </summary>
        </member>
        <member name="F:Project2.Program.toppings">
            <summary>
            List containing toppings ordered
            </summary>
        </member>
        <member name="F:Project2.Program.meats">
            <summary>
            Temporary holding list for meat selections during sandwich order
            </summary>
        </member>
        <member name="F:Project2.Program.sandwichCount">
            <summary>
            Number of sandwiches in this order
            </summary>
        </member>
        <member name="F:Project2.Program.sandwichTotal">
            <summary>
            Total cost of all sandwiches ordered (aggregate)
            </summary>
        </member>
        <member name="F:Project2.Program.taxAmount">
            <summary>
            Calculated value of sales tax
            </summary>
        </member>
        <member name="F:Project2.Program.finalTotal">
            <summary>
            Calculation variable for final total (all parts)
            </summary>
        </member>
        <member name="F:Project2.Program.workingTotal">
            <summary>
            Holding variable for calculations
            </summary>
        </member>
        <member name="M:Project2.Program.Main(System.String[])">
            <summary>
            Main entry point for the program
            </summary>
        </member>
        <member name="M:Project2.Program.Welcome">
            <summary>
            Displays Welcome message and requests customer name
            </summary>
        </member>
        <member name="M:Project2.Program.StartOrder">
            <summary>
            Asks for Name and Delivery Action
            </summary>
        </member>
        <member name="M:Project2.Program.TakeOrder">
            <summary>
            Managing method for taking multiple sandwich orders
            </summary>
        </member>
        <member name="M:Project2.Program.GetSandwich(System.Int32)">
            <summary>
            Managing method to create a single sandwich object
            </summary>
        </member>
        <member name="M:Project2.Program.GetSandwichSize">
            <summary>
            Method to get the size of an individual sandwich
            </summary>
        </member>
        <member name="M:Project2.Program.GetDressing">
            <summary>
            Method to get the customer's Dressing selection for this sandwich
            </summary>
        </member>
        <member name="M:Project2.Program.GetCheese">
            <summary>
            Method to get the customer's Cheese selection for this sandwich
            </summary>
        </member>
        <member name="M:Project2.Program.GetMeats">
            <summary>
            Method to collect one or more meats for the sandwich
            </summary>
        </member>
        <member name="M:Project2.Program.GetToppings">
            <summary>
            Method to collect one or more toppings for a sandwich
            </summary>
        </member>
        <member name="M:Project2.Program.CreateReceipt">
            <summary>
            Method to generate receipt upon conclusion of data entry.
            </summary>
        </member>
        <member name="T:Project2.Sandwich">
            <summary>
            Class to contain a single detailed instance of a sandwich
            </summary>
        </member>
        <member name="F:Project2.Sandwich.meats">
            <summary>
            Backing Array containing selected meats
            </summary>
        </member>
        <member name="F:Project2.Sandwich.toppings">
            <summary>
            Backing Array containing selected toppings
            </summary>
        </member>
        <member name="P:Project2.Sandwich.Size">
            <summary>
            Size of the sandwich
            </summary>
        </member>
        <member name="P:Project2.Sandwich.Toppings">
            <summary>
            Array containing selected toppings
            </summary>
        </member>
        <member name="P:Project2.Sandwich.Dressing">
            <summary>
            Dressing selected
            </summary>
        </member>
        <member name="P:Project2.Sandwich.Meats">
            <summary>
            Array containing selected meats
            </summary>
        </member>
        <member name="P:Project2.Sandwich.Cheese">
            <summary>
            Cheese Selected
            </summary>
        </member>
        <member name="M:Project2.Sandwich.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Project2.Sandwich.#ctor(Project2.Size,Project2.Dressing,System.Collections.Generic.List{Project2.Topping},System.Collections.Generic.List{Project2.Meat},Project2.Cheese)">
            <summary>
            Parameterized Constructor
            </summary>
            <param name="_size">Sandwich Size</param>
            <param name="_dressing">Sandwich Dressing (or none)</param>
            <param name="_toppings">
            List containing individual topping selections.  
            Note: user can select multiple toppings and can double up toppings by multiple selection.
            </param>
            <param name="_meats">List containing individual meet selections.</param>
            <param name="_cheese">Cheese selected for the sandwich</param>
        </member>
        <member name="M:Project2.Sandwich.CalculateSubTotal">
            <summary>
            Calculate the cost for this sandwich based on the options selected
            </summary>
        </member>
        <member name="M:Project2.Sandwich.Format">
            <summary>
            Method to return a string used for formatting
            </summary>
        </member>
        <member name="M:Project2.Sandwich.ToString">
            <summary>
            Method to prepare a formatted string containing all detail for the sandwich
            </summary>
        </member>
        <member name="T:Project2.Size">
            <summary>
            Enum listing the sandwich sizes available
            </summary>
        </member>
        <member name="F:Project2.Size.Small">
            <summary>
            Small Sub Sandwich
            </summary>
        </member>
        <member name="F:Project2.Size.Medium">
            <summary>
            Medium Sub Sandwich
            </summary>
        </member>
        <member name="F:Project2.Size.Large">
            <summary>
            Large Sub Sandwich
            </summary>
        </member>
        <member name="T:Project2.Topping">
            <summary>
            Toppings (vegetables) availaable for a sandwich
            </summary>
        </member>
        <member name="F:Project2.Topping.Lettuce">
            <summary>
            Lettuce Selection
            </summary>
        </member>
        <member name="F:Project2.Topping.Onion">
            <summary>
            Onion Selection
            </summary>
        </member>
        <member name="F:Project2.Topping.Sweet_Peppers">
            <summary>
            Sweet Peppers Selection
            </summary>
        </member>
        <member name="F:Project2.Topping.Hot_Peppers">
            <summary>
            Hot Peppers Selection
            </summary>
        </member>
        <member name="F:Project2.Topping.Tomato">
            <summary>
            Tomato Selection
            </summary>
        </member>
        <member name="F:Project2.Topping.Black_Olive">
            <summary>
            Black Olive Selection
            </summary>
        </member>
        <member name="F:Project2.Topping.Cucumber">
            <summary>
            Cucumber Selection
            </summary>
        </member>
        <member name="F:Project2.Topping.None">
            <summary>
            Nothing selected (no topping)
            </summary>
        </member>
        <member name="T:Project2.Utility">
            <summary>
            Class containing utility methods and static constants
            </summary>
            <remarks>
            This class contains:
            1. Pricing matrix
            2. Constants for accessing the matrix
            3. A method for capturing pricing from the matrix
            4. Color display constants
            5. Tax Rate
            6. Method to display text in color
            7. Method to generate a menu list, obtain input, validate input
            </remarks>
        </member>
        <member name="F:Project2.Utility.prices">
            <summary>
            Array with current pricing structure
            </summary>
        </member>
        <member name="F:Project2.Utility.SIZE_INDEX">
            <summary>
            Size index to pricing array
            </summary>
        </member>
        <member name="F:Project2.Utility.TOPPING_INDEX">
            <summary>
            Topping index to pricing array
            </summary>
        </member>
        <member name="F:Project2.Utility.MEAT_INDEX">
            <summary>
            Meat index to pricing array
            </summary>
        </member>
        <member name="F:Project2.Utility.CHEESE_INDEX">
            <summary>
            Cheese index to pricing array
            </summary>
        </member>
        <member name="F:Project2.Utility.ERROR">
            <summary>
            Color value to display errors
            </summary>
        </member>
        <member name="F:Project2.Utility.TEXT">
            <summary>
            Color value for generic text
            </summary>
        </member>
        <member name="F:Project2.Utility.PROMPT">
            <summary>
            Color value to display prompt after menu list
            </summary>
        </member>
        <member name="F:Project2.Utility.MENU">
            <summary>
            Color value to display menu items
            </summary>
        </member>
        <member name="F:Project2.Utility.HEADER">
            <summary>
            Color for receipt accents
            </summary>
        </member>
        <member name="F:Project2.Utility.DELIVERY_FEE">
            <summary>
            Static charge for a delivery order
            </summary>
        </member>
        <member name="F:Project2.Utility.SAMELINE">
            <summary>
            Constant value indicating a WriteColor should not start a new line
            </summary>
        </member>
        <member name="F:Project2.Utility.TAX_RATE">
            <summary>
            Static Tax Rate
            </summary>
        </member>
        <member name="M:Project2.Utility.WriteColor(System.String,System.ConsoleColor,System.Boolean)">
            <summary>
            Displays the provided text string in the specified color
            </summary>
            <param name="_msg">Text to display</param>
            <param name="_color">Color to display</param>
            <param name="_newLine">Include New Line (default true)</param>
        </member>
        <member name="M:Project2.Utility.GetEnumValue(System.Collections.Generic.List{System.String},System.String,System.String)">
            <summary>
            Gets the index to a provided enum list.  Automatically confirms entered value is numeric and in range.
            </summary>
            <param name="_values">List of string containing the values for the enum</param>
            <param name="_intro">string to be presented at the top of the selection list</param>
            <param name="_prompt">prompt issued after the selection list is displayed</param>
            <returns>int marker corresponding to the the selection made.</returns>
        </member>
        <member name="M:Project2.Utility.GetPrice(Project2.Size,System.Int32)">
            <summary>
            Utility to obtain an item price for a specific size
            </summary>
            <param name="_size">Index value to the sub size (based on the size enum)</param>
            <param name="_type">Index value to the price row (size, topping, meat, etc.)</param>
        </member>
    </members>
</doc>
